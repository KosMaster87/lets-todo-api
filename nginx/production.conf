# ──────────────────────────────────────────────────────────────────────────────
# Production API Configuration: lets-todo-api.dev2k.org
# ──────────────────────────────────────────────────────────────────────────────

# ##########################################################
# 0) HTTP‑Server (Port 80) für Production API:
#    → ACME‑Challenge freigeben, alle anderen Requests → HTTPS
# ##########################################################
server {
    listen 80;
    listen [::]:80;
    server_name lets-todo-api.dev2k.org;

    # ACME‑Challenge (Certbot HTTP‑01) zulassen
    location /.well-known/acme-challenge/ {
        alias /var/www/certbot/.well-known/acme-challenge/;
        try_files $uri =404;
    }

    # Alle anderen HTTP‑Requests → HTTPS
    location / {
        return 301 https://$host$request_uri;
    }
}

# ##########################################################
# 1) HTTPS‑Server (Port 443) für Production API
# ##########################################################
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name lets-todo-api.dev2k.org;
    
    # ─── SSL/TLS via Let's Encrypt ───────────────────────────
    ssl_certificate     /etc/letsencrypt/live/lets-todo-api.dev2k.org/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/lets-todo-api.dev2k.org/privkey.pem;
    include             /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam         /etc/letsencrypt/ssl-dhparams.pem;

    # ─── Security Headers ────────────────────────────────────
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
    add_header X-Content-Type-Options nosniff;
    add_header X-Frame-Options DENY;
    add_header Referrer-Policy "no-referrer-when-downgrade";

    # ─── CORS Headers für Production Frontend ─────────────────
    add_header Access-Control-Allow-Origin "https://lets-todo.dev2k.org";
    add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS";
    add_header Access-Control-Allow-Headers "Content-Type, Authorization";
    add_header Access-Control-Allow-Credentials true;

    # ─── Logging ──────────────────────────────────────────────
    access_log  /var/log/nginx/lets-todo-api-prod.log main;
    error_log   /var/log/nginx/lets-todo-api-prod.error.log warn;

    # ─── Rate Limiting Zone (define in main nginx.conf) ───────
    # http { limit_req_zone $binary_remote_addr zone=api_limit:10m rate=10r/s; }

    # ─── Reverse‑Proxy & Rate‑Limit für /api/ ────────────────
    location ^~ /api/ {
        limit_req zone=api_limit burst=20 nodelay;
        proxy_pass         http://127.0.0.1:3002;
        proxy_http_version 1.1;
        proxy_set_header   Host               $host;
        proxy_set_header   X-Real-IP          $remote_addr;
        proxy_set_header   X-Forwarded-For    $proxy_add_x_forwarded_for;
        proxy_set_header   X-Forwarded-Proto  $scheme;
        proxy_set_header   Upgrade            $http_upgrade;
        proxy_set_header   Connection         "upgrade";

        # Cookie-Anpassungen
        proxy_cookie_domain ~^\.lets-todo-api\.dev2k\.org$ .dev2k.org;
        proxy_cookie_path ~*^/.* /;
        proxy_pass_header Set-Cookie;
        
        # Timeout-Einstellungen
        proxy_connect_timeout 60s;
        proxy_read_timeout 60s;
        proxy_send_timeout 60s;
    }

    # ─── Handle OPTIONS requests ─────────────────────────────
    location = /api/options {
        add_header Access-Control-Allow-Origin "https://lets-todo.dev2k.org";
        add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS";
        add_header Access-Control-Allow-Headers "Content-Type, Authorization";
        add_header Access-Control-Allow-Credentials true;
        add_header Content-Length 0;
        add_header Content-Type text/plain;
        return 200;
    }

    # ─── Alle anderen Pfade → 404 ────────────────────────────
    location / {
        return 404;
    }
}